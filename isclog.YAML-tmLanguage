# [PackageDev] target_format: plist, ext: tmLanguage
---
name: ISCLOG
scopeName: text.isclog
fileTypes: [isclog]
uuid: 853c4505-d59e-4e5c-8999-a5d709e779e2
firstLineMatch: ^\^(\%)?ISCLOG
patterns:
- comment: log level
  match: ^(\^\%ISCLOG)\s*(=)\s*(([0-9])|\".*?\")\s*$
  captures:
    '1': {name: comment.line.isclog}
    '2': {name: keyword.operator.isclog}
    '3': {name: constant.numeric.isclog}
- comment: data counter
  match: ^(\^(\%)?ISCLOG\(\"Data\"\))\s*(=)\s*([0-9]+)
  captures:
    '1': {name: comment.line.isclog}
    '3': {name: keyword.operator.isclog}
    '4': {name: constant.numeric.isclog}
- comment: Filter
  match: ^(\^\%ISCLOG\((\"(Category|Job|Tag|ErrorDetail)\")(,(\"?.*?\"?))?\))\s*(=)\s*([0-9]+)
  captures:
    '1': {name: comment.line.isclog}
    '2': {name: variable.language.isclog}
    '5': {name: constant.numeric.isclog}
    '6': {name: keyword.operator.isclog}
    '7': {name: constant.numeric.isclog}
- comment: MaxLogEntries filter
  match: ^(\^\%ISCLOG\((\"MaxLogEntries\")\))\s*(=)\s*([0-9]+)
  captures:
    '1': {name: comment.line.isclog}
    '2': {name: variable.language.isclog}
    '3': {name: keyword.operator.isclog}
    '4': {name: constant.numeric.isclog}
- comment: new entry
  begin: ^(\^(\%)?ISCLOG\(\"Data\"\s*,\s*[0-9]+\s*\))(=)(\$(?i)lb) #\(([0-9]*|\".*?\"),([0-9]*|\".*?\"),([0-9]*|\".*?\"),.*\)\s*$
  end: (?<=\))$
  name: comment.line.isclog
  patterns:
  #- {include: '#level-one'}
  - comment: level 1 (log level)
    begin: \(
    end: (?=\)$)
    beginCaptures:
      '1': {name: comment.line.isclog}
    #name: variable.language.isclog
    patterns:
    - match: '[^\,]*(?=\,)'
      name: variable.language.isclog
    - comment: level 2 (function)
      begin: \,
      end: (?=\)$)
      patterns:
      - match: '[^\,]*(?=\,)'
        name: constant.numeric.isclog
      - comment: level 3 (message)
        begin: \,
        end: (?=\)$)
        #name: invalid.illegal.isclog
        patterns:
        - match: ((\"(\[.*?\])?.*?\")|(\$c\(.*?\)))*
        #- match: ((\"(\[[^\]]*\])?[^\"]*\")|(\$c\([0-9\,]*\))|(_))+ #(?=\,)
          captures: 
            '2': {name: entity.name}
            #'5': {name: invalid.illegal.isclog}
            '3': {name: support.function.isclog}
            '4': {name: constant.numeric.isclog}
          name: entity.name.isclog
        - comment: level 4 (PID)
          begin: \,
          end: (?=\)$)
          #name: keyword.control.isclog
          patterns:
          - match: '[^\,]*(?=\,)'
            name: keyword.control.isclog
          - comment: level 5 (namespace)
            begin: \,
            end: (?=\)$)
            #name: variable.language.isclog
            patterns:
            - match: '[^\,]*(?=\,)'
              name: variable.language.isclog
            - comment: level 6 (timestamp)
              begin: \,
              end: (?=\)$)
              #name: storage.modifier.isclog
              patterns:
              - match: '[^\,]*(?=\,)'
                name: storage.modifier.isclog
              - comment: level 7 routine
                begin: \,
                end: (?=\)$)
                #name: string.quoted.double.isclog
                patterns:
                - match: '[^\,]*(?=\,)'
                  name: string.quoted.double.isclog
                - comment: level 8 (requestId)
                  begin: \,
                  end: (?=\)$)
                  #name: support.class.isclog
                  patterns:
                  - match: '[^\,]*(?=\,)'
                    name: support.class.isclog
                  - comment: level 9 (sessionId)
                    begin: \,
                    end: (?=\)$)
                    #name: support.function.isclog
                    patterns:
                    - match: '[^\)]*(?=\))'
                      name: support.function.isclog
  captures:
    '1': {name: comment.line.isclog}
    '3': {name: keyword.operator.isclog}
    '4': {name: comment.line.isclog}
- comment: data entry
  begin: ^(\^(\%)?ISCLOG\(\"Data\"\s*,\s*[0-9]+\s*\,\s*0(\,(.*?))?\))\s*(=) #(.*?)$
  end: $
  beginCaptures:
    '1': {name: comment.line.isclog}
    '4': {name: variable.language.isclog}
    '5': {name: keyword.operator.isclog}
  name: string.quoted.double.isclog
  patterns:
  - match: (\"|^)(.*?)(=)(.*)\"
    captures:
      '2': {name: storage.modifier.isclog}
      '3': {name: comment.line.isclog}
      '4': {name: variable.language.isclog}
...